查询每个国家有多少个城市,要求显示国家名称,城市数量
1.分析列
	国家名称
	城市名称
2.分析表
	城市表
	国家表
3.关联
	select * from country co,city c
	where co.country_id=c.country_id;
4.过滤
	select co.country,count(c.city) from country co,city c
	where co.country_id=c.country_id
	group by co.country;

查询每个城市有多少个客户(统计客户id),要求显示城市名称,客户数量
1.分析列
	城市名称
	客户id
2.分析表
	city
	address
	customer
3.关联
	select * from city c,address a,customer cu
	where c.city_id=a.city_id
	and a.address_id=cu.address_id;
4.过滤
	select c.city,count(customer_id) from city c,address a,customer cu
	where c.city_id=a.city_id
	and a.address_id=cu.address_id
	group by c.city;

查询C开头的国家,每个国家有多少个城市
select co.country,count(c.city) from city c,country co
where c.country_id=co.country_id
and co.country like 'C%'
group by co.country;

----------------------------------------------------------------------------
1.排序和分页
a.排序
	按照某种顺序把数据进行排列
	顺序(从小到大)
	order by 列;
	order by 列 asc;
	倒序(从大到小)
	order by 列 desc;
	语法:
	select 列 from  表
		where 条件
			group by 分组条件
				having 分组后过滤条件
					order by 排序条件;
	需求:查询ecs_goods表中所有数据，按照本店售价从大到小进行排列
		select * from ecs_goods order by shop_price  desc;
	需求:查询ecs_goods表中商品名称以诺基亚开头的数据，按照本店售价顺序排列
		select * from ecs_goods where goods_name like '诺基亚%' order by shop_price;
	需求:查询city表中所有数据，先按照country_id顺序排列，city_id逆序排列
		select * from city order by country_id,city_id desc;
b.分页
	limit x,y
	x:单独使用查询是前几行
	x，y:查询x后面y条数据
	需求:查询city表中前10行数据
	select * from city limit 10;
	需求:查询city表中11-15行数据
	select * from city limit 10,5;

2.表的约束
	主键约束 列中的数是唯一的(不重复)，不能为空，每张表中只能有一个，针对于外键而言
	唯一约束 列中的数是唯一的(不重复)，可以为空，作为主键约束的补充
	非空约束 列中的数据不能为空
	检查约束 列中的数据是否满足条件
	外键约束 列中的数据依赖于另外一张表中的数据
	默认值  default 数据
	语法:
	create table 表(
		列 数据类型 primary key,
		列 数据类型 unique,
		列 数据类型 not null,
		列 数据类型 check(检查条件),
		列 数据类型 references 被参考表(被参考列)
	)
	外键约束
	1.被参考表的被参考列一定存在，必须是主键约束
	2.参考列和被参考列的数据类型必须一致
--建表测试题目
create table 宿舍表(
		宿舍号  char(6) primary key,
		宿舍电话 int check(宿舍电话>=6330000 and 宿舍电话<=6339999)
);

create table 同学表(
		学号 char(6) primary key,
		姓名 char(10) not null,
		性别 char(10) check(性别='男' or 性别='女'),
		年龄 int not null,
		民族 char(20) default '汉' not null,
		身份证号 char(30) unique,
		宿舍号 char(6)  references 宿舍表(宿舍号)
	)
--4.png
1.
1>select xm，zkzh from tb_student where score>0 and score<5;
2>select * from tb_student where xm='张三' and score=5;
2.select c.成绩表 from 学生表 s,成绩表 c
where s.准考证号=c.zkzh
and s.年龄 between 20 and 35
order by 准考证号 desc;
--2.png
1.select count(*) from table1;
2.select t2.学生家庭住址 from table1 t1,table2 t2
where t1.学生id=t2.学生id
and t1.姓名 like '张%'
and t1.性别='女'
order by t1.姓名;
--5.bmp
1.select avg(english) from mark;
2.select m.math,c.name,c.address,c.telno from cust c,mark m
  where c.studentno=m.studentno
  and c.studentno in (11,22,33,44,55)
--8.jpg
1.
create table store_information(
	name char(20) not null,
	sales int not null,
	date  date not null
);
2.
alter table store_information add Memo char(20);
3.
alter table store_information change name store_name char(20);
update store_information set store_name=replace(store_name,'店','分店');
4.
select store_name,date,avg(sales)  from store_information
group by store_name,date;
5.
select store_name,sum(sales) from store_information
group by store_name
having sum(sales)>1000000;

-----------------------------------------------------------------------------
1.索引
类似于一本书的目录
优点:查询速度快
缺点:降低增删改的效率
语法:
创建索引：create index 索引名 on 表(列);
create index i_goods on goods(name);
删除索引:alter table 表 drop index 索引名;
alter table goods drop index i_goods;
2.视图
虚拟出来的表，是不存在的，通常通过视图来查看专门的数据，通常是只读
视图中的数据都来源于真实表中的数据
语法:
创建视图:
create view 视图名字
as
查询语句
创建视图v_g,查询每个商品对应的分类名称
create view v_g
as
select g.goods_name,c.cat_name  from   ecs_goods g,ecs_category c
where g.cat_id=c.cat_id;

查询视图内容：
select * from v_g;

删除视图：
drop view 视图名字;
drop view v_g;

3.事务
一件事有开始就一定要有结束
Heygor========bank========老板们
commit    提交数据到数据库中，除非认为修改否则数据不会变化
rollback  数据库返回最后一次提交的状态

4.存储过程
写业务逻辑的，基础是SQL




